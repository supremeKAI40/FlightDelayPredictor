# -*- coding: utf-8 -*-
"""WidhyaML InstagramReachPredictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yfXKU_N6qkX9nzljipkiDfMMmKgUKGp4
"""

import pandas as pd
from sklearn import metrics
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import re

df= pd.read_csv("https://raw.githubusercontent.com/WidhyaOrg/datasets/master/instagram_reach.csv")
df

df.columns

df2=df.copy()

df2

#Dropping all other categorical columns as well as SNo.
df2=df2.drop(['Unnamed: 0','USERNAME','Caption','Hashtags', 'S.No'], axis=1)

data= df2["Time since posted"].tolist()

len(data),type(data)

numData=[]
for i in range(len(data)):
    a= data[i]
    dataP= re.sub("[^0-9]", "", a)
    #converting string to int dtype
    numData.append(int(dataP))


#Another Method would be to use str.split in dataframe and then convert the number into int type and delete the other split rows.

df2['Time since posted']=numData

df2.head()

model= LinearRegression()

df2=df2.values

X= df2[:,:-1]
Y=df2[:,-1]

X

X.shape,Y.shape

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.20, random_state=42)

len(X_train), len(X_test)

model.fit(X_train,Y_train)

preds=model.predict([[300,10]])

preds

#prediction on validation set
Y_preds= trainModel.predict(X_test)
Y_preds

#checking MSE error in our Regression Model
print("{:.2f}".format(metrics.mean_absolute_error(Y_test, Y_preds)))

